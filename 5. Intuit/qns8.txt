class Solution {
public:
    int numberOfBoomerangs(vector<vector<int>>& points) {
        int n = points.size(), ans = 0;
        for(int i = 0 ; i < n ; i++) {
            unordered_map<double, int> map;
            for(int j = 0 ; j < n ; j++) {
                if(i == j) continue;
                double dist = pow(pow(points[i][0] - points[j][0], 2) + pow(points[i][1] - points[j][1], 2), 0.5);
                // cout<<i<<" "<<j<<" "<<dist<<endl;
                if(map.find(dist) != map.end()) {
                    
                    ans += map[dist];
                    map[dist]++;
                }
                else map[dist]++;
            }
        }
        
        return 2*ans;
    }
};