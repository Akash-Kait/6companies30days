// { Driver Code Starts
#include <bits/stdc++.h>

using namespace std;


 // } Driver Code Ends
//User function template for C++
unordered_map<char, int> maps;
bool compare(char c1, char c2) {
    return (maps[c1] < maps[c2]);
}
class Solution{
public:	
	void matchPairs(char nuts[], char bolts[], int n) {
	  // code here
	    maps.clear();
	    maps['!'] = 0;
	    maps['#'] = 1;
	    maps['$'] = 2;
	    maps['%'] = 3;
	    maps['&'] = 4;
	    maps['*'] = 5;
	    maps['@'] = 6;
	    maps['^'] = 7;
	    maps['~'] = 8;
	    
	    sort(nuts, nuts + n, compare);
	    sort(bolts, bolts + n, compare);
	}
};

// { Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        char nuts[n], bolts[n];
        for (int i = 0; i < n; i++) {
            cin >> nuts[i];
        }
        for (int i = 0; i < n; i++) {
            cin >> bolts[i];
        }
        Solution ob;
        ob.matchPairs(nuts, bolts, n);
        for (int i = 0; i < n; i++) {
            cout << nuts[i] << " ";
        }
        cout << "\n";
        for (int i = 0; i < n; i++) {
            cout << bolts[i] << " ";
        }
        cout << "\n";
    }
    return 0;
}
  // } Driver Code Ends