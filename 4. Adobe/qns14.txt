// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;
#define N 1000


 // } Driver Code Ends
// you are required to complete this function 
// function should print the required range
#define ele pair<int, pair<int, int>>
class Solution{
    public:
    pair<int,int> findSmallestRange(int KSortedArray[][N], int n, int k)
    {
        //code here
        priority_queue<ele, vector<ele>, greater<ele> > min_heap;
        int lo = INT_MAX, hi = INT_MIN;
        
        for(int i = 0 ; i < k ; i++) {
            
            int val = KSortedArray[i][0];
            lo = min(lo, val);
            hi = max(hi, val);
            
            min_heap.push({val, {i, 0}});
        }
        
        int range = hi-lo, mn = lo, mx = hi;
        while(1) {
            auto mini = min_heap.top();
            min_heap.pop();
            int val = mini.first;
            int arr = mini.second.first;
            int pos = mini.second.second;
            
            // cout<<val<<" "<<hi<<endl;
            if(range > hi-val) {
                range = hi-val;
                mn = val;
                mx = hi;
            }
            if(pos == n-1) break;
            int newVal = KSortedArray[arr][pos+1];
            hi = max(hi, newVal);
            
            min_heap.push({newVal, {arr, pos+1}});
        }
        
        return {mn, mx};
    }
};

// { Driver Code Starts.
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n, k;
        cin>>n>>k;
        int arr[N][N];
        pair<int,int> rangee;
        for(int i=0; i<k; i++)
            for(int j=0; j<n; j++)
                cin>>arr[i][j];
        Solution obj;
	    rangee = obj.findSmallestRange(arr, n, k);
	    cout<<rangee.first<<" "<<rangee.second<<"\n";
    }   
	return 0;
}

  // } Driver Code Ends